# 
# Copyright 2025 Google LLC
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     https://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

openapi: 3.1.0
info:
  title: PSearch Rules API
  description: |
    API for managing search boost and bury rules in PSearch.
    
    This API allows you to:
    * Create boost/bury rules for products
    * Retrieve existing rules
    * Update rule configurations
    * Delete rules
    
    Rules can be based on:
    * Product categories
    * Brands
    * Price ranges
    * Specific product IDs
  version: 1.0.0
  contact:
    name: PSearch Team
    url: https://github.com/yourusername/psearch
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:8000
    description: Local development server

tags:
  - name: Rules
    description: Operations for managing boost and bury rules
  - name: System
    description: System-related operations like health checks

components:
  schemas:
    RuleType:
      type: string
      enum: [boost, bury]
      description: Type of rule - either boost to increase visibility or bury to decrease visibility

    ConditionType:
      type: string
      enum: [category, brand, price_range, product_id]
      description: Type of condition to apply the rule

    Rule:
      type: object
      required:
        - type
        - conditionType
        - condition
        - score
      properties:
        type:
          $ref: '#/components/schemas/RuleType'
        conditionType:
          $ref: '#/components/schemas/ConditionType'
        condition:
          type: string
          description: |
            The condition value to match against. Format depends on conditionType:
            * For category: Category name (e.g., "Electronics")
            * For brand: Brand name (e.g., "Apple")
            * For price_range: Min-max format (e.g., "0-100")
            * For product_id: Product ID (e.g., "prod_123")
        score:
          type: number
          format: float
          minimum: 0
          exclusiveMinimum: true
          description: Score to apply when rule matches. Must be greater than 0. Higher values for boost, lower values for bury.

    RuleInDB:
      allOf:
        - $ref: '#/components/schemas/Rule'
        - type: object
          required:
            - id
          properties:
            id:
              type: string
              description: Unique identifier for the rule

    RuleResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Operation result message
        rule:
          $ref: '#/components/schemas/RuleInDB'
          nullable: true
          description: The affected rule, if applicable

    HealthResponse:
      type: object
      required:
        - status
        - project_id
        - database
        - collection
      properties:
        status:
          type: string
          description: Health status of the service
        project_id:
          type: string
          description: GCP project ID
        database:
          type: string
          description: Firestore database name
        collection:
          type: string
          description: Firestore collection name

    Error:
      type: object
      required:
        - detail
      properties:
        detail:
          type: string
          description: Error message describing what went wrong

paths:
  /api/rules:
    get:
      tags:
        - Rules
      summary: Get all rules
      description: Retrieves all boost and bury rules from the database
      operationId: getRules
      responses:
        '200':
          description: List of all rules
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RuleInDB'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - Rules
      summary: Create a new rule
      description: |
        Creates a new boost or bury rule.
        
        The rule can be based on:
        * Product category
        * Brand
        * Price range (format: min-max, e.g., "0-100")
        * Specific product ID
        
        The score determines the impact:
        * For boost rules: higher scores increase visibility
        * For bury rules: higher scores decrease visibility
      operationId: createRule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rule'
      responses:
        '200':
          description: Rule created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleInDB'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/rules/{rule_id}:
    parameters:
      - name: rule_id
        in: path
        required: true
        schema:
          type: string
        description: ID of the rule to operate on

    put:
      tags:
        - Rules
      summary: Update an existing rule
      description: Updates an existing rule by its ID. All fields must be provided.
      operationId: updateRule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rule'
      responses:
        '200':
          description: Rule updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleInDB'
        '404':
          description: Rule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - Rules
      summary: Delete a rule
      description: Deletes an existing rule by its ID
      operationId: deleteRule
      responses:
        '200':
          description: Rule deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleResponse'
        '404':
          description: Rule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/health:
    get:
      tags:
        - System
      summary: Health check
      description: Checks the health of the API and its connection to Firestore
      operationId: healthCheck
      responses:
        '200':
          description: Service health information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 